name: CI-CD

on:
  push:
    branches: [master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: "${{ github.sha }}"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: "${{ secrets.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_TOKEN }}"

      - name: Build & push user-code image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile_user_code
          platforms: linux/amd64
          cache-from: type=registry,ref=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/ingestion_pipelines_user_code:buildcache
          cache-to: type=registry,ref=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/ingestion_pipelines_user_code:buildcache,mode=max
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/ingestion_pipelines_user_code:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/ingestion_pipelines_user_code:${{ env.IMAGE_TAG }}

      - name: Build & push Dagster runtime image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile_dagster
          platforms: linux/amd64
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/dagster-runtime:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/dagster-runtime:buildcache,mode=max
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/dagster-runtime:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/dagster-runtime:${{ env.IMAGE_TAG }}

      - name: Deploy on EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: "${{ secrets.EC2_HOST }}"
          username: "${{ secrets.EC2_USER }}"
          key: "${{ secrets.EC2_KEY }}"
          script: |
          
            set -e
            cd "$HOME"
            cd dagster-app
            cd git_actions

            export DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
            docker login -u $DOCKERHUB_USERNAME -p ${{ secrets.DOCKERHUB_TOKEN }}
            docker-compose pull
            docker-compose up -d
            docker image prune -f 